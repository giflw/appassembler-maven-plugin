~~
~~
~~ The MIT License
~~
~~ Copyright 2006-2011 The Codehaus.
~~
~~ Permission is hereby granted, free of charge, to any person obtaining a copy of
~~ this software and associated documentation files (the "Software"), to deal in
~~ the Software without restriction, including without limitation the rights to
~~ use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies
~~ of the Software, and to permit persons to whom the Software is furnished to do
~~ so, subject to the following conditions:
~~
~~ The above copyright notice and this permission notice shall be included in all
~~ copies or substantial portions of the Software.
~~
~~ THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
~~ IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
~~ FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
~~ AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
~~ LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
~~ OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
~~ SOFTWARE.
~~

  ------
  Example how to use Application Assembler Plugin
  ------
  ------
  ------

Scripts

* The Simplest Case

  The following configuration will generate a windows (.bat) and unix shell script in the <<<bin>>> folder of 
  the <<<$\{project.build.directory\}/appassembler>>> sub folder.

+--------------------------
<project>
  ...
  <build>
    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>appassembler-maven-plugin</artifactId>
        <version>${project.version}</version>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>assemble</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <programs>
            <program>
              <mainClass>com.mycompany.app.App</mainClass>
              <name>app</name>
            </program>
          </programs>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>
+--------------------------

  In the following examples we will show only the configuration block, cause the rest will be always the same.
  
* Generate Multiple Scripts

  Suppose you have created two classes which have a <<main>> you need to create two scripts. This can simply 
  achieved by using the following configuration. There is no limitation how many scrips you can generate 
  through a configuration like this.

+--------------------------
<project>
  ...
  <build>
    <plugins>
        ...
        <configuration>
          <programs>
            <program>
              <mainClass>com.mycompany.app.App</mainClass>
              <name>app</name>
            </program>
            <program>
              <mainClass>com.mycompany.app.App1</mainClass>
              <name>app1</name>
            </program>
            .
            .
          </programs>
        </configuration>
      </plugin>
      ...
    </plugins>
  </build>
</project>
+--------------------------

  []
