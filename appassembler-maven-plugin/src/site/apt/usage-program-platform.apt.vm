~~
~~
~~ The MIT License
~~
~~ Copyright 2006-2011 The Codehaus.
~~
~~ Permission is hereby granted, free of charge, to any person obtaining a copy of
~~ this software and associated documentation files (the "Software"), to deal in
~~ the Software without restriction, including without limitation the rights to
~~ use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies
~~ of the Software, and to permit persons to whom the Software is furnished to do
~~ so, subject to the following conditions:
~~
~~ The above copyright notice and this permission notice shall be included in all
~~ copies or substantial portions of the Software.
~~
~~ THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
~~ IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
~~ FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
~~ AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
~~ LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
~~ OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
~~ SOFTWARE.
~~

  ------
  Example how to use Application Assembler Plugin
  ------
  ------
  ------

Platforms

* All Platforms

  The default is to generate scripts for all platforms which means to generate 
  Windows and shell scripts.

+--------------------------
<project>
  ...
  <build>
    <plugins>
      <plugin>
        ...
       <configuration>
          <platforms>
           <platform>all</platform>
          </platforms>
          <programs>
            <program>
              <mainClass>com.mycompany.app.App</mainClass>
              <name>app</name>
            </program>
          </programs>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>
+--------------------------


* Single Platform

  The generation supports Windows as platform as well as Unix as platform. 
  If you like to generate a script for one platform you can simply define 
  the platform in the <<program>> block of the script part.

+--------------------------
<project>
  ...
  <build>
    <plugins>
      <plugin>
        ...
        <configuration>
          <programs>
            <program>
              <platforms>
                <platform>unix</platform>
              </platforms>
              <mainClass>com.mycompany.app.App</mainClass>
              <name>app</name>
            </program>
          </programs>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>
+--------------------------


* Single Platform Multiple Classes

  If you like to generate for a single platform but multiple classes which contain
  a main method this can done by using the following:

+--------------------------
<project>
  ...
  <build>
    <plugins>
      <plugin>
        ...
        <configuration>
          <platforms>
            <platform>unix</platform>
          </platforms>
          <programs>
            <program>
              <mainClass>com.mycompany.app.App1</mainClass>
              <name>app1</name>
            </program>
            <program>
              <mainClass>com.mycompany.app.App2</mainClass>
              <name>app2</name>
            </program>
          </programs>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>
+--------------------------

* Combine Platforms and Multiple Classes

  Suppose you would like to create a part of you Java program for 
  Unix but an other part for Windows? So this can be done using the
  following configuration:

+--------------------------
<project>
  ...
  <build>
    <plugins>
      <plugin>
        ...
        <configuration>
          <programs>
            <program>
              <platforms>
                <platform>unix</platform>
              </platforms>
              <mainClass>com.mycompany.app.App</mainClass>
              <name>app</name>
            </program>
            <program>
              <platforms>
                <platform>windows</platform>
              </platforms>
              <mainClass>com.mycompany.app.AppWindows</mainClass>
              <name>app-windows</name>
            </program>
          </programs>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>
+--------------------------

  []
